name: Tests

on:
  push:
    branches: [ main, master, migration ]
  pull_request:
    branches: [ main, master, migration ]

jobs:
  test:
    name: Test Java ${{ matrix.java }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        java: ['11', '17', '21']

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: datahike_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: datahike_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      minio:
        image: minio/minio:latest
        env:
          MINIO_ROOT_USER: minioadmin
          MINIO_ROOT_PASSWORD: minioadmin
        ports:
          - 9000:9000
        options: >-
          --health-cmd "curl -f http://localhost:9000/minio/health/live || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        # Note: MinIO needs server command
        command: server /data

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}

      - name: Install Leiningen
        run: |
          wget https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein
          chmod +x lein
          sudo mv lein /usr/local/bin/
          lein version

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            ~/.lein
          key: ${{ runner.os }}-lein-${{ hashFiles('**/project.clj') }}
          restore-keys: |
            ${{ runner.os }}-lein-

      - name: Download dependencies
        run: lein deps

      - name: Wait for services to be ready
        run: |
          echo "Waiting for services to be healthy..."
          sleep 10

          # Test Postgres
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for Postgres..."
            sleep 2
          done

          # Test MySQL
          until mysqladmin ping -h 127.0.0.1 -P 3306 --silent; do
            echo "Waiting for MySQL..."
            sleep 2
          done

          # Test Redis
          until redis-cli -h localhost -p 6379 ping; do
            echo "Waiting for Redis..."
            sleep 2
          done

          echo "All services ready!"

      - name: Run tests
        run: lein test
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: datahike_test
          MYSQL_HOST: 127.0.0.1
          MYSQL_PORT: 3306
          MYSQL_USER: root
          MYSQL_PASSWORD: rootpassword
          MYSQL_DB: datahike_test
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          MINIO_ENDPOINT: http://localhost:9000
          MINIO_ACCESS_KEY: minioadmin
          MINIO_SECRET_KEY: minioadmin

      - name: Generate coverage report
        if: matrix.java == '17'
        run: lein cloverage --codecov
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: datahike_test
          MYSQL_HOST: 127.0.0.1
          MYSQL_PORT: 3306
          MYSQL_USER: root
          MYSQL_PASSWORD: rootpassword
          MYSQL_DB: datahike_test
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          MINIO_ENDPOINT: http://localhost:9000
          MINIO_ACCESS_KEY: minioadmin
          MINIO_SECRET_KEY: minioadmin

      - name: Upload coverage to Codecov
        if: matrix.java == '17'
        uses: codecov/codecov-action@v4
        with:
          file: ./target/coverage/codecov.json
          flags: unittests
          name: codecov-datacamp
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-java-${{ matrix.java }}
          path: target/test-results.txt
          if-no-files-found: ignore

      - name: Upload coverage report
        if: always() && matrix.java == '17'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: target/coverage/
          if-no-files-found: ignore
